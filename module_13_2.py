from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import asyncio

try:
    from credentials import token
except ImportError:
    print("Error: You must use your own Telegram Bot API token to use this program")
    print("Place token in credentials.py")
    exit(1)


bot = Bot(token=token)
dp = Dispatcher(bot, storage=MemoryStorage(), )


@dp.message_handler(commands=['start'])
async def start_message(message):
    # печатает строку в консоли 'Привет! Я бот помогающий твоему здоровью.' .
    # Запускается только когда написана команда '/start' в чате с ботом.
    print('Привет! Я бот помогающий твоему здоровью.')


@dp.message_handler()
async def all_messages(message):
    # печатает строку в консоли 'Введите команду /start, чтобы начать общение.'.
    # Запускается при любом обращении не описанном ранее.
    print('Введите команду /start, чтобы начать общение.')


def main():
    executor.start_polling(dp, skip_updates=True)
    """
    Ввод в чат Telegram:
    Хэй!
    /start
    Вывод в консоль:
    Updates were skipped successfully.
    Введите команду /start, чтобы начать общение.
    Привет! Я бот помогающий твоему здоровью.
    """


if __name__ == '__main__':
    main()


"""
2024/01/18 00:00|Домашнее задание по теме "Хендлеры обработки сообщений".
Цель: написать простейшего телеграм-бота, используя асинхронные функции.

Подготовка:
Выполните все действия представленные в предыдущих видео модуля, создав и подготовив Telegram-бот для дальнейших заданий.
Нужные версии для 13 и 14 модулей и вашего виртуального окружения находятся здесь. Если не помните, как установить необходимые библиотеки, обратитесь к материалам 11 модуля.
Актуальная версия Python для дальнейшей работы - 3.9.13.

Задача "Бот поддержки (Начало)":
К коду из подготовительного видео напишите две асинхронные функции:
start(message) - печатает строку в консоли 'Привет! Я бот помогающий твоему здоровью.' . Запускается только когда написана команда '/start' в чате с ботом. (используйте соответствующий декоратор)
all_massages(message) - печатает строку в консоли 'Введите команду /start, чтобы начать общение.'. Запускается при любом обращении не описанном ранее. (используйте соответствующий декоратор)
Запустите ваш Telegram-бот и проверьте его на работоспособность.
Пример результата выполнения программы:
Ввод в чат Telegram:
Хэй!
/start
Вывод в консоль:
Updates were skipped successfully.
Введите команду /start, чтобы начать общение.
Привет! Я бот помогающий твоему здоровью.

Примечания:
Для ответа на сообщение используйте декоратор message_handler.
При отправке вашего кода на GitHub не забудьте убрать ключ для подключения к вашему боту!
Файл module_13_2.py загрузите на ваш GitHub репозиторий. В решении пришлите ссылку на него.
"""
